server:
  port: 8082
spring:
  application:
    name: order-service
  datasource:
    url: jdbc:mysql://localhost:3306/springtest  #jdbc:postgresql://localhost:5332/customer
    username: stockapptest
    password: stockapptest
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update #create-drop #update
    show-sql: true
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: notificationTopic
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    properties:
      spring.json.type.mapping: event:com.smumo.orderservice.event.OrderPlacedEvent
    #topic:
      #name: notificationTopic


  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

resilience4j:
  circuitbreaker:
    instances:
      inventory:
        registerHealthIndicator: true
        event-consumer-buffer-size: 10
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
  timelimiter: #Resilience4J Timeout Properties
    instances:
      inventory:
        timeout-duration: 3s
  retry: #Resilience4J Retry Properties
    instances:
      inventory:
        max-attempts: 3
        wait-duration: 5s
